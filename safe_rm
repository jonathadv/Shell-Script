#!/usr/bin/env bash
#
# ----------------------------------------------------------------------------
#
# This script prevents accidental deletions by sending files to Trash.
# If gvfs-trash command is available in the system, it will be used, otherwise,
# a folder called .trash will be created inside ${HOME} directory and the
# files will be moved to there.
#
# Usage:
# source safe_rm
#
# The best way to use this function is to source it in .bashrc file.
# WARNING: This approach doesn't work with `sudo` command or when using
# different user accounts.
#
#
# Author: Jonatha Daguerre Vasconcelos <jonatha@daguerre.com.br>
# Version: 1.1
# Date: 24/08/2016
# Update: 05/10/2016
# Licence: GPL
#
# ----------------------------------------------------------------------------
#

function rm(){

    if [[ "${1}" =~ ^-[rvf]+$ ]]; then
      shift  
    fi
 

    if ((${#@} < 1)); then
        echo '[safe rm]: missing operand'
        echo 'Try `rm --help` for more information'
        return 1
    fi
   
   
    if [[ -f '/usr/bin/gvfs-trash' ]]; then
        local gvfs_version="$(gvfs-trash --version 2> /dev/null | cut -d ' ' -f 2)"
    
        if [[ "$1" == "--help" ]]; then
            echo "Usage: rm FILE..."
            echo "Move files to trash using gvfs-trash instead of delete them permanently."
            return 0
        fi
        
        echo "--- safe rm (gvfs$([[ -n ${gvfs_version} ]] && printf '%s' " ${gvfs_version}")) ---"

        if /usr/bin/gvfs-trash "${@}"; then
            echo "File(s) [${*}] sent to trash."
        else
           echo "Error when deleting file(s): ${*}"
        fi

        echo '------------------------------'
    
    else   
        local trash="${HOME}/.trash"
        [[ ! -d "${trash}" ]] && mkdir "${trash}"
        
        if [[ "$1" == "--help" ]]; then
            echo "Usage: rm FILE..."
            echo "Move files to ${trash} instead of delete them permanently."
            return 0
        fi
        
        echo '--- safe rm ---'
        for file in "${@}"; do
        
            if [[ -f "${file}" || -d "${file}" ]]; then
                file="${file/%\//}"
                mv -v "${file/%\//}" "${trash}/${file}.$(date +%s)"
                
            else
                echo "[safe rm]: cannot stat ‘${file}’: No such file or directory"
                continue
            fi
            
        done
        
        echo
        echo "Trash size: $(du -sh ${trash})"
        echo '---------------'
    fi
}
